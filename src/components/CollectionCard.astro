---
export interface Props {
  title: string;
  description: string;
  category: string;
  priceRange: string;
  featured?: boolean;
  image?: string;
  href: string;
  highlights?: string[];
}

const { title, description, category, priceRange, featured = false, image, href, highlights = [] } = Astro.props;

const categoryIcons = {
  'mens-clothing': '👔',
  'womens-fashion': '👗',
  'kids-wear': '👶',
  'footwear': '👟',
  'seasonal': '🍂',
  'brands': '⭐'
};

const categoryIcon = categoryIcons[category as keyof typeof categoryIcons] || '👕';
---

<article class={`group bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 ${featured ? 'ring-2 ring-primary-200' : ''}`}>
  {featured && (
    <div class="bg-primary-600 text-white px-4 py-2 text-sm font-medium">
      ⭐ Featured Collection
    </div>
  )}
  
  <a href={href} class="block">
    <!-- Image Section -->
    <div class="aspect-[4/3] bg-gradient-to-br from-primary-50 to-secondary-50 relative overflow-hidden">
      <div class="absolute inset-0 flex items-center justify-center">
        <div class="text-center">
          <div class="text-6xl mb-2">{categoryIcon}</div>
          <p class="text-gray-400 text-sm">Collection Image</p>
        </div>
      </div>
      
      <!-- Category badge -->
      <div class="absolute top-4 left-4 bg-white/90 backdrop-blur-sm px-3 py-1 rounded-full text-sm font-medium text-gray-700 capitalize">
        {category.replace('-', ' ')}
      </div>
      
      <!-- Price range badge -->
      <div class="absolute top-4 right-4 bg-primary-600 text-white px-3 py-1 rounded-full text-sm font-medium">
        {priceRange}
      </div>
    </div>
    
    <!-- Content Section -->
    <div class="p-6">
      <h3 class="text-xl font-bold text-gray-900 mb-3 group-hover:text-primary-600 transition-colors">
        {title}
      </h3>
      
      <p class="text-gray-600 mb-4 line-clamp-2">
        {description}
      </p>
      
      {highlights.length > 0 && (
        <div class="mb-4">
          <div class="flex flex-wrap gap-2">
            {highlights.slice(0, 3).map((highlight) => (
              <span class="inline-flex items-center px-2 py-1 bg-primary-50 text-primary-700 rounded text-xs font-medium">
                <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                {highlight}
              </span>
            ))}
          </div>
        </div>
      )}
      
      <div class="flex items-center justify-between">
        <span class="text-sm text-gray-500 flex items-center">
          <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-2m-2 0H7m5 0v-5a2 2 0 00-2-2H7v7m3 0h2m0 0h2v-7h-2v7z"></path>
          </svg>
          In Store Now
        </span>
        
        <span class="inline-flex items-center text-primary-600 font-medium group-hover:text-primary-700 transition-colors">
          Shop Collection
          <svg class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </span>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>